version: '3' # especifica a versão da configuração do Docker Compose

services: # define os serviços a serem executados
  php: # serviço para o PHP
    container_name: setup-php # define o nome do contêiner
    build: # especifica como o contêiner deve ser construído
      context: ./docker/php # caminho para o diretório de construção do contêiner
      dockerfile: Dockerfile # especifica o nome do arquivo Dockerfile
    restart: unless-stopped # define a política de reinicialização do contêiner
    tty: true # aloca um pseudo-TTY para o contêiner
    volumes: # lista de volumes a serem montados no contêiner
      - ./demo:/var/www # mapeia o diretório "demo" do host para o diretório "/var/www" do contêiner
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini # mapeia o arquivo "local.ini" do host para o arquivo "/usr/local/etc/php/conf.d/local.ini" do contêiner
    networks: # especifica as redes que o contêiner deve fazer parte
      - setup-network # nome da rede

  nginx: # serviço para o servidor Nginx
    container_name: setup-nginx # define o nome do contêiner
    build: # especifica como o contêiner deve ser construído
      context: ./docker/nginx # caminho para o diretório de construção do contêiner
      dockerfile: Dockerfile # especifica o nome do arquivo Dockerfile
    restart: unless-stopped # define a política de reinicialização do contêiner
    tty: true # aloca um pseudo-TTY para o contêiner
    ports: # lista de portas a serem expostas pelo contêiner
      - '8080:80' # mapeia a porta 80 do contêiner para a porta 8080 do host
      - '443:443' # mapeia a porta 443 do contêiner para a porta 443 do host
    volumes: # lista de volumes a serem montados no contêiner
      - ./demo:/var/www # mapeia o diretório "demo" do host para o diretório "/var/www" do contêiner
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf # mapeia o arquivo "default.conf" do host para o arquivo "/etc/nginx/conf.d/default.conf" do contêiner
    networks: # especifica as redes que o contêiner deve fazer parte
      - setup-network # nome da rede

  mysql: # serviço para o banco de dados MySQL
    container_name: setup-mysql # define o nome do contêiner
    image: mysql:8.0 # especifica a imagem a ser usada para o contêiner
    command: --default-authentication-plugin=mysql_native_password # especifica o comando para executar no contêiner
    restart: always # define a política de reinicialização do contêiner
    tty: true # aloca um pseudo-TTY para o contêiner
    volumes: # lista de volumes a serem montados no contêiner
      - setup-data:/var/lib/mysql/ # mapeia o volume "setup-data" do host para o diretório "/var/lib/mysql" do contêiner
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf # mapeia o arquivo "
    networks:
      - setup-network
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password

  phpmyadmin:
    container_name: setup-phpmyadmin
    image: phpmyadmin:5.2
    restart: always
    ports:
      - '8888:80'
    networks:
      - setup-network
    environment:
      PMA_HOST: setup-mysql
    depends_on:
      - mysql

  redis:
    container_name: setup-redis
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    ports:
      - '6379:6379'

networks:
  setup-network:
    driver: bridge


volumes:
  setup-data:
    driver: local